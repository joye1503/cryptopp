# In the YML below each job gets an environment that includes
# BUILD_OS and BUILD_MODE. The variables are used in the driver
# scripts and is used to select a test. For example, BUILD_OS=linux
# and BUILD_MODE=all means run 'make all' on Linux. The Android
# tests specify a ANDROID_API, ANDROID_CPU; and the iOS tests
# specify IOS_SDK and IOS_CPU. They are exported for the underlying
# setenv-*.sh scripts.

# DO NOT create top level (global) keys like env, arch, os, compiler.
# The top level/global keys invoke [unwanted] matrix expansion. Also
# see https://stackoverflow.com/q/58473000/608639 and
# https://docs.travis-ci.com/user/reference/overview/ and
# https://docs.travis-ci.com/user/multi-cpu-architectures and
# https://github.com/travis-ci/travis-yml/blob/master/schema.json.

language: cpp
dist: bionic

git:
  depth: 5

# Use jobs rather than matrix since we are precisely
# specifiying our test cases. Do not move any of the
# keys (env, os, arch, compiler, etc) into global.
# Putting them in global invokes the matrix expansion.
jobs:
  include:
    - name: Standard build, GCC, Linux, amd64
      os: linux
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=all
    - name: Native build, GCC, Linux, amd64
      os: linux
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=native
    - name: No-asm build, GCC, Linux, amd64
      os: linux
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=no-asm
    - name: Debug build, GCC, Linux, amd64
      os: linux
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=debug
    - name: Asan build, GCC, Linux, amd64
      os: linux
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=asan
    - name: UBsan build, GCC, Linux, amd64
      os: linux
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=ubsan
    - name: PEM build, GCC, Linux, amd64
      os: linux
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=pem
    - name: Autotools build, GCC, Linux, amd64
      os: linux
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=autotools
    - name: CMake build, GCC, Linux, amd64
      os: linux
      arch: amd64
      compiler: gcc
      env:
        - BUILD_OS=linux
        - BUILD_MODE=cmake
    - name: Standard build, Clang, Linux, amd64
      os: linux
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=all
    - name: Native build, Clang, Linux, amd64
      os: linux
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=native
    - name: No-asm build, Clang, Linux, amd64
      os: linux
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=no-asm
    - name: Debug build, Clang, Linux, amd64
      os: linux
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=debug
    - name: Asan build, Clang, Linux, amd64
      os: linux
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=asan
    - name: UBsan build, Clang, Linux, amd64
      os: linux
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=ubsan
    - name: PEM build, Clang, Linux, amd64
      os: linux
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=pem
    - name: Autotools build, Clang, Linux, amd64
      os: linux
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=autotools
    - name: CMake build, Clang, Linux, amd64
      os: linux
      arch: amd64
      compiler: clang
      env:
        - BUILD_OS=linux
        - BUILD_MODE=cmake
    - name: Standard build, GCC, Linux, arm64
      os: linux
      arch: arm64
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=all
    - name: Native build, GCC, Linux, arm64
      os: linux
      arch: arm64
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=native
    - name: No-asm build, GCC, Linux, arm64
      os: linux
      arch: arm64
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=no-asm
    - name: Debug build, GCC, Linux, arm64
      os: linux
      arch: arm64
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=debug
    - name: Asan build, GCC, Linux, arm64
      os: linux
      arch: arm64
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=asan
    - name: UBsan build, GCC, Linux, arm64
      os: linux
      arch: arm64
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=ubsan
    - name: PEM build, GCC, Linux, arm64
      os: linux
      arch: arm64
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=pem
    - name: Autotools build, GCC, Linux, arm64
      os: linux
      arch: arm64
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=autotools
    - name: CMake build, GCC, Linux, arm64
      os: linux
      arch: arm64
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=cmake
    - name: Standard build, Clang, Linux, arm64
      os: linux
      arch: arm64
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=all
    - name: Native build, Clang, Linux, arm64
      os: linux
      arch: arm64
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=native
    - name: No-asm build, Clang, Linux, arm64
      os: linux
      arch: arm64
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=no-asm
    - name: Debug build, Clang, Linux, arm64
      os: linux
      arch: arm64
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=debug
    - name: Asan build, Clang, Linux, arm64
      os: linux
      arch: arm64
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=asan
    - name: UBsan build, Clang, Linux, arm64
      os: linux
      arch: arm64
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=ubsan
    - name: PEM build, Clang, Linux, arm64
      os: linux
      arch: arm64
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=pem
    - name: Autotools build, Clang, Linux, arm64
      os: linux
      arch: arm64
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=autotools
    - name: CMake build, Clang, Linux, arm64
      os: linux
      arch: arm64
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=cmake

    - name: Standard build, GCC, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=all
    - name: Native build, GCC, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=native
    - name: No-asm build, GCC, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=no-asm
    - name: Debug build, GCC, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=debug
    - name: Asan build, GCC, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=asan
    - name: UBsan build, GCC, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=ubsan
    - name: PEM build, GCC, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=pem
    - name: Autotools build, GCC, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=autotools
    - name: CMake build, GCC, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: gcc
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=cmake
    - name: Standard build, Clang, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=all
    - name: Native build, Clang, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=native
    - name: No-asm build, Clang, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=no-asm
    - name: Debug build, Clang, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=debug
    - name: Asan build, Clang, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=asan
    - name: UBsan build, Clang, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=ubsan
    - name: PEM build, Clang, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=pem
    - name: Autotools build, Clang, Linux, arm64
      os: linux
      arch: arm64
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=autotools
    - name: CMake build, Clang, Linux, arm64
      os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: clang
      dist: bionic
      env:
        - BUILD_OS=linux
        - BUILD_MODE=cmake
before_install:
  - |
    if [[ "$BUILD_OS" == "linux" ]] && [[ "$BUILD_MODE" == "android" ]]; then
        # https://github.com/travis-ci/travis-ci/issues/9037
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A145
        sudo apt-get -qq -y update
        bash TestScripts/install-ndk.sh
    fi
    if [[ "$BUILD_OS" == "linux" ]] && [[ "$BUILD_MODE" == "autotools" ]]; then
        # https://github.com/travis-ci/travis-ci/issues/9037
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A145
        sudo apt-get -qq -y install autoconf automake libtool
    fi
    # Clang 7 compiler is completely broken on PPC64 and s390x
    if [[ "$TRAVIS_CPU_ARCH" == "ppc64le" ]] || [[ "$TRAVIS_CPU_ARCH" == "s390x" ]]; then
        if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$TRAVIS_COMPILER" == "clang" ]]; then
            # https://github.com/travis-ci/travis-ci/issues/9037
            sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A145
            sudo apt-get -qq -y install --no-install-recommends clang-8
        fi
    fi

script:
  - |
    if [[ "$BUILD_MODE" == "ios" ]]; then
        source TestScripts/setenv-ios.sh
        make -f GNUmakefile-cross -j 2 all static dynamic
    elif [[ "$BUILD_MODE" == "android" ]]; then
        source TestScripts/setenv-android.sh
        make -f GNUmakefile-cross -j 2 all static dynamic
    elif [[ "$BUILD_MODE" == "autotools" ]]; then
        bash TestScripts/cryptest-autotools.sh
    elif [[ "$BUILD_MODE" == "cmake" ]]; then
        bash TestScripts/cryptest-cmake.sh
    elif [[ "$BUILD_MODE" == "pem" ]]; then
        bash TestScripts/cryptest-pem.sh
    elif [[ "$BUILD_MODE" == "osx-fat" ]]; then
        CXXFLAGS="-DNDEBUG -g2 -O3 -arch i386 -arch x86_64" make -j 2
        arch -i386 ./cryptest.exe v
        arch -i386 ./cryptest.exe tv all
        arch -x86_64 ./cryptest.exe v
        arch -x86_64 ./cryptest.exe tv all
    elif [[ "$BUILD_MODE" == "debug" ]]; then
        CXXFLAGS="-DDEBUG -g2 -O1" make -j 2
        ./cryptest.exe v
        ./cryptest.exe tv all
    else
        make "$BUILD_MODE" -j 2
        ./cryptest.exe v
        ./cryptest.exe tv all
    fi

# Whitelist branches to avoid testing feature branches twice
branches:
  only:
    - master
    - /\/ci$/

notifications:
  email:
    recipients:
      - cryptopp-build@googlegroups.com
    on_success: always # default: change
    on_failure: always # default: always
